//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientManagementSystem.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/ClientManagementSystem.Models")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResidentialddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postalddress {
            get {
                return this.PostalddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalddressField, value) != true)) {
                    this.PostalddressField = value;
                    this.RaisePropertyChanged("Postalddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Residentialddress {
            get {
                return this.ResidentialddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ResidentialddressField, value) != true)) {
                    this.ResidentialddressField = value;
                    this.RaisePropertyChanged("Residentialddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Workddress {
            get {
                return this.WorkddressField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkddressField, value) != true)) {
                    this.WorkddressField = value;
                    this.RaisePropertyChanged("Workddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/ClientManagementSystem.Models")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EthnicityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaritalStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ethnicity {
            get {
                return this.EthnicityField;
            }
            set {
                if ((object.ReferenceEquals(this.EthnicityField, value) != true)) {
                    this.EthnicityField = value;
                    this.RaisePropertyChanged("Ethnicity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaritalStatus {
            get {
                return this.MaritalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.MaritalStatusField, value) != true)) {
                    this.MaritalStatusField = value;
                    this.RaisePropertyChanged("MaritalStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/ClientManagementSystem.Models")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellNumber {
            get {
                return this.CellNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CellNumberField, value) != true)) {
                    this.CellNumberField = value;
                    this.RaisePropertyChanged("CellNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactID {
            get {
                return this.ContactIDField;
            }
            set {
                if ((this.ContactIDField.Equals(value) != true)) {
                    this.ContactIDField = value;
                    this.RaisePropertyChanged("ContactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkNumber {
            get {
                return this.WorkNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkNumberField, value) != true)) {
                    this.WorkNumberField = value;
                    this.RaisePropertyChanged("WorkNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAddress", ReplyAction="http://tempuri.org/IService1/AddAddressResponse")]
        void AddAddress(ClientManagementSystem.ServiceReference1.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddAddress", ReplyAction="http://tempuri.org/IService1/AddAddressResponse")]
        System.Threading.Tasks.Task AddAddressAsync(ClientManagementSystem.ServiceReference1.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClientAddress", ReplyAction="http://tempuri.org/IService1/GetClientAddressResponse")]
        ClientManagementSystem.ServiceReference1.Address GetClientAddress(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClientAddress", ReplyAction="http://tempuri.org/IService1/GetClientAddressResponse")]
        System.Threading.Tasks.Task<ClientManagementSystem.ServiceReference1.Address> GetClientAddressAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddClient", ReplyAction="http://tempuri.org/IService1/AddClientResponse")]
        int AddClient(ClientManagementSystem.ServiceReference1.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddClient", ReplyAction="http://tempuri.org/IService1/AddClientResponse")]
        System.Threading.Tasks.Task<int> AddClientAsync(ClientManagementSystem.ServiceReference1.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClients", ReplyAction="http://tempuri.org/IService1/GetClientsResponse")]
        System.Collections.Generic.List<ClientManagementSystem.ServiceReference1.Client> GetClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClients", ReplyAction="http://tempuri.org/IService1/GetClientsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ClientManagementSystem.ServiceReference1.Client>> GetClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddContact", ReplyAction="http://tempuri.org/IService1/AddContactResponse")]
        void AddContact(ClientManagementSystem.ServiceReference1.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddContact", ReplyAction="http://tempuri.org/IService1/AddContactResponse")]
        System.Threading.Tasks.Task AddContactAsync(ClientManagementSystem.ServiceReference1.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetContact", ReplyAction="http://tempuri.org/IService1/GetContactResponse")]
        ClientManagementSystem.ServiceReference1.Contact GetContact(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetContact", ReplyAction="http://tempuri.org/IService1/GetContactResponse")]
        System.Threading.Tasks.Task<ClientManagementSystem.ServiceReference1.Contact> GetContactAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateContact", ReplyAction="http://tempuri.org/IService1/UpdateContactResponse")]
        void UpdateContact(ClientManagementSystem.ServiceReference1.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateContact", ReplyAction="http://tempuri.org/IService1/UpdateContactResponse")]
        System.Threading.Tasks.Task UpdateContactAsync(ClientManagementSystem.ServiceReference1.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAddress", ReplyAction="http://tempuri.org/IService1/UpdateAddressResponse")]
        void UpdateAddress(ClientManagementSystem.ServiceReference1.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAddress", ReplyAction="http://tempuri.org/IService1/UpdateAddressResponse")]
        System.Threading.Tasks.Task UpdateAddressAsync(ClientManagementSystem.ServiceReference1.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateClient", ReplyAction="http://tempuri.org/IService1/UpdateClientResponse")]
        void UpdateClient(ClientManagementSystem.ServiceReference1.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateClient", ReplyAction="http://tempuri.org/IService1/UpdateClientResponse")]
        System.Threading.Tasks.Task UpdateClientAsync(ClientManagementSystem.ServiceReference1.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ClientManagementSystem.ServiceReference1.CompositeType GetDataUsingDataContract(ClientManagementSystem.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ClientManagementSystem.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(ClientManagementSystem.ServiceReference1.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ClientManagementSystem.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ClientManagementSystem.ServiceReference1.IService1>, ClientManagementSystem.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public void AddAddress(ClientManagementSystem.ServiceReference1.Address address) {
            base.Channel.AddAddress(address);
        }
        
        public System.Threading.Tasks.Task AddAddressAsync(ClientManagementSystem.ServiceReference1.Address address) {
            return base.Channel.AddAddressAsync(address);
        }
        
        public ClientManagementSystem.ServiceReference1.Address GetClientAddress(int ClientID) {
            return base.Channel.GetClientAddress(ClientID);
        }
        
        public System.Threading.Tasks.Task<ClientManagementSystem.ServiceReference1.Address> GetClientAddressAsync(int ClientID) {
            return base.Channel.GetClientAddressAsync(ClientID);
        }
        
        public int AddClient(ClientManagementSystem.ServiceReference1.Client client) {
            return base.Channel.AddClient(client);
        }
        
        public System.Threading.Tasks.Task<int> AddClientAsync(ClientManagementSystem.ServiceReference1.Client client) {
            return base.Channel.AddClientAsync(client);
        }
        
        public System.Collections.Generic.List<ClientManagementSystem.ServiceReference1.Client> GetClients() {
            return base.Channel.GetClients();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ClientManagementSystem.ServiceReference1.Client>> GetClientsAsync() {
            return base.Channel.GetClientsAsync();
        }
        
        public void AddContact(ClientManagementSystem.ServiceReference1.Contact contact) {
            base.Channel.AddContact(contact);
        }
        
        public System.Threading.Tasks.Task AddContactAsync(ClientManagementSystem.ServiceReference1.Contact contact) {
            return base.Channel.AddContactAsync(contact);
        }
        
        public ClientManagementSystem.ServiceReference1.Contact GetContact(int ClientID) {
            return base.Channel.GetContact(ClientID);
        }
        
        public System.Threading.Tasks.Task<ClientManagementSystem.ServiceReference1.Contact> GetContactAsync(int ClientID) {
            return base.Channel.GetContactAsync(ClientID);
        }
        
        public void UpdateContact(ClientManagementSystem.ServiceReference1.Contact contact) {
            base.Channel.UpdateContact(contact);
        }
        
        public System.Threading.Tasks.Task UpdateContactAsync(ClientManagementSystem.ServiceReference1.Contact contact) {
            return base.Channel.UpdateContactAsync(contact);
        }
        
        public void UpdateAddress(ClientManagementSystem.ServiceReference1.Address address) {
            base.Channel.UpdateAddress(address);
        }
        
        public System.Threading.Tasks.Task UpdateAddressAsync(ClientManagementSystem.ServiceReference1.Address address) {
            return base.Channel.UpdateAddressAsync(address);
        }
        
        public void UpdateClient(ClientManagementSystem.ServiceReference1.Client client) {
            base.Channel.UpdateClient(client);
        }
        
        public System.Threading.Tasks.Task UpdateClientAsync(ClientManagementSystem.ServiceReference1.Client client) {
            return base.Channel.UpdateClientAsync(client);
        }
        
        public ClientManagementSystem.ServiceReference1.CompositeType GetDataUsingDataContract(ClientManagementSystem.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ClientManagementSystem.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(ClientManagementSystem.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
